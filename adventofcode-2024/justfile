set dotenv-load

# Use `just work day-01 part1` to work on the specific binary for a specific day's problems
work day part:
    cargo watch -w {{day}} -x "check -p {{day}}" -s "just test {{day}} {{part}}" -s "just lint {{day}}"
lint day:
    cargo clippy -p {{day}}
test day part:
    cargo nextest run -p {{day}} {{part}}
run day part:
    cargo run -p {{day}} --bin part{{part}} --release
clippy-fix day:
    cargo clippy --fix -p {{day}}
bench-all:
    cargo bench -q > benchmarks.txt
bench day:
    cargo bench --bench {{day}}-bench >> {{day}}.bench.txt
# create the directory for a new day's puzzle and fetch the input
create day:
    cargo generate --path ./daily-template --name "{{day}}"
    just get-input {{day}}


# You can find SESSION by using Chrome tools:
# 1) Go to https://adventofcode.com/2022/day/1/input
# 2) right-click -> inspect -> click the "Application" tab.
# 3) Refresh
# 5) Click https://adventofcode.com under "Cookies"
# 6) Grab the value for session. Fill it into your .env file
#
# see `.envrc-example` and rename it to `.envrc`

# get the input for a day's puzzle
get-input day:
    ./scripts/get-aoc-input.rs --day {{day}} --current-working-directory {{justfile_directory()}}

# Variables
hugo_static := env_var('HOME') + "/programming/content-flowi.github.io/static/adventofcode-2024"
frontend_dir := "./frontend"

# Build and publish the frontend to Hugo static directory
publish-hugo: build copy-to-hugo

# Build the frontend
build:
    cd {{frontend_dir}} && yarn build

# Copy the built artifacts to Hugo static directory
copy-to-hugo:
    #!/usr/bin/env bash
    set -euo pipefail

    # Ensure the destination directory exists
    mkdir -p {{hugo_static}}

    # Clean the existing content
    rm -rf {{hugo_static}}/*

    # Copy the new content
    cp -r {{frontend_dir}}/dist/* {{hugo_static}}/

    echo "âœ“ Published to Hugo static directory at {{hugo_static}}"
